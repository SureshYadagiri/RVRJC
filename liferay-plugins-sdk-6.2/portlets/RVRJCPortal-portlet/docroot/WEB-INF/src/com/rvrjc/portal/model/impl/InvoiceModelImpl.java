/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rvrjc.portal.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rvrjc.portal.model.Invoice;
import com.rvrjc.portal.model.InvoiceModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Invoice service. Represents a row in the &quot;rvrjc_Invoice&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rvrjc.portal.model.InvoiceModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link InvoiceImpl}.
 * </p>
 *
 * @author suresh
 * @see InvoiceImpl
 * @see com.rvrjc.portal.model.Invoice
 * @see com.rvrjc.portal.model.InvoiceModel
 * @generated
 */
public class InvoiceModelImpl extends BaseModelImpl<Invoice>
	implements InvoiceModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a invoice model instance should use the {@link com.rvrjc.portal.model.Invoice} interface instead.
	 */
	public static final String TABLE_NAME = "rvrjc_Invoice";
	public static final Object[][] TABLE_COLUMNS = {
			{ "invoiceId", Types.BIGINT },
			{ "amountPaid", Types.BIGINT },
			{ "paidDate", Types.TIMESTAMP },
			{ "sno", Types.BIGINT },
			{ "createdOn", Types.TIMESTAMP },
			{ "createdBy", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table rvrjc_Invoice (invoiceId LONG not null primary key,amountPaid LONG,paidDate DATE null,sno LONG,createdOn DATE null,createdBy VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table rvrjc_Invoice";
	public static final String ORDER_BY_JPQL = " ORDER BY invoice.invoiceId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY rvrjc_Invoice.invoiceId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rvrjc.portal.model.Invoice"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rvrjc.portal.model.Invoice"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rvrjc.portal.model.Invoice"));

	public InvoiceModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _invoiceId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setInvoiceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _invoiceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Invoice.class;
	}

	@Override
	public String getModelClassName() {
		return Invoice.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("invoiceId", getInvoiceId());
		attributes.put("amountPaid", getAmountPaid());
		attributes.put("paidDate", getPaidDate());
		attributes.put("sno", getSno());
		attributes.put("createdOn", getCreatedOn());
		attributes.put("createdBy", getCreatedBy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long invoiceId = (Long)attributes.get("invoiceId");

		if (invoiceId != null) {
			setInvoiceId(invoiceId);
		}

		Long amountPaid = (Long)attributes.get("amountPaid");

		if (amountPaid != null) {
			setAmountPaid(amountPaid);
		}

		Date paidDate = (Date)attributes.get("paidDate");

		if (paidDate != null) {
			setPaidDate(paidDate);
		}

		Long sno = (Long)attributes.get("sno");

		if (sno != null) {
			setSno(sno);
		}

		Date createdOn = (Date)attributes.get("createdOn");

		if (createdOn != null) {
			setCreatedOn(createdOn);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}
	}

	@Override
	public long getInvoiceId() {
		return _invoiceId;
	}

	@Override
	public void setInvoiceId(long invoiceId) {
		_invoiceId = invoiceId;
	}

	@Override
	public long getAmountPaid() {
		return _amountPaid;
	}

	@Override
	public void setAmountPaid(long amountPaid) {
		_amountPaid = amountPaid;
	}

	@Override
	public Date getPaidDate() {
		return _paidDate;
	}

	@Override
	public void setPaidDate(Date paidDate) {
		_paidDate = paidDate;
	}

	@Override
	public long getSno() {
		return _sno;
	}

	@Override
	public void setSno(long sno) {
		_sno = sno;
	}

	@Override
	public Date getCreatedOn() {
		return _createdOn;
	}

	@Override
	public void setCreatedOn(Date createdOn) {
		_createdOn = createdOn;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Invoice.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Invoice toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Invoice)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		InvoiceImpl invoiceImpl = new InvoiceImpl();

		invoiceImpl.setInvoiceId(getInvoiceId());
		invoiceImpl.setAmountPaid(getAmountPaid());
		invoiceImpl.setPaidDate(getPaidDate());
		invoiceImpl.setSno(getSno());
		invoiceImpl.setCreatedOn(getCreatedOn());
		invoiceImpl.setCreatedBy(getCreatedBy());

		invoiceImpl.resetOriginalValues();

		return invoiceImpl;
	}

	@Override
	public int compareTo(Invoice invoice) {
		int value = 0;

		if (getInvoiceId() < invoice.getInvoiceId()) {
			value = -1;
		}
		else if (getInvoiceId() > invoice.getInvoiceId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Invoice)) {
			return false;
		}

		Invoice invoice = (Invoice)obj;

		long primaryKey = invoice.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Invoice> toCacheModel() {
		InvoiceCacheModel invoiceCacheModel = new InvoiceCacheModel();

		invoiceCacheModel.invoiceId = getInvoiceId();

		invoiceCacheModel.amountPaid = getAmountPaid();

		Date paidDate = getPaidDate();

		if (paidDate != null) {
			invoiceCacheModel.paidDate = paidDate.getTime();
		}
		else {
			invoiceCacheModel.paidDate = Long.MIN_VALUE;
		}

		invoiceCacheModel.sno = getSno();

		Date createdOn = getCreatedOn();

		if (createdOn != null) {
			invoiceCacheModel.createdOn = createdOn.getTime();
		}
		else {
			invoiceCacheModel.createdOn = Long.MIN_VALUE;
		}

		invoiceCacheModel.createdBy = getCreatedBy();

		String createdBy = invoiceCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			invoiceCacheModel.createdBy = null;
		}

		return invoiceCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{invoiceId=");
		sb.append(getInvoiceId());
		sb.append(", amountPaid=");
		sb.append(getAmountPaid());
		sb.append(", paidDate=");
		sb.append(getPaidDate());
		sb.append(", sno=");
		sb.append(getSno());
		sb.append(", createdOn=");
		sb.append(getCreatedOn());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.rvrjc.portal.model.Invoice");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>invoiceId</column-name><column-value><![CDATA[");
		sb.append(getInvoiceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amountPaid</column-name><column-value><![CDATA[");
		sb.append(getAmountPaid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paidDate</column-name><column-value><![CDATA[");
		sb.append(getPaidDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sno</column-name><column-value><![CDATA[");
		sb.append(getSno());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdOn</column-name><column-value><![CDATA[");
		sb.append(getCreatedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Invoice.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Invoice.class
		};
	private long _invoiceId;
	private long _amountPaid;
	private Date _paidDate;
	private long _sno;
	private Date _createdOn;
	private String _createdBy;
	private Invoice _escapedModel;
}